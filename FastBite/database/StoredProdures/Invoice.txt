USE [FoodieDB]
GO
/****** Object:  StoredProcedure [dbo].[Invoice]    Script Date: 22/4/2025 2:58:10 pm ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[Invoice]
	@Action NVARCHAR(10),  
    @PaymentId INT = NULL,  
    @UserId INT = NULL,  
    @OrderDetailsId INT = NULL,  
    @Status NVARCHAR(50) = NULL  
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	  -- GET INVOICE BY ID  
	IF @Action = 'INVOICBYID'  
	BEGIN  
		SELECT ROW_NUMBER() OVER(ORDER BY (SELECT 1)) AS [SrNo], o.OrderNo, p.Name, p.Price, o.Quantity,  
		(p.Price * o.Quantity) AS TotalPrice, o.OrderDate, o.Status, pm.PaymentMode, pm.CardNo 
		FROM Orders o  
		INNER JOIN Products p ON p.ProductId = o.ProductId  
		INNER JOIN Payment pm ON pm.PaymentId = o.PaymentId
		WHERE o.PaymentId = @PaymentId AND o.UserId = @UserId  

		-- Hàng tổng với các cột ép kiểu để khớp với bảng chi tiết
        SELECT CAST(NULL AS BIGINT) AS [SrNo], 
               CAST(NULL AS NVARCHAR(50)) AS OrderNo, 
               'Total' AS Name, 
               CAST(NULL AS DECIMAL(18,2)) AS Price, -- Ép kiểu Price thành DECIMAL
               CAST(NULL AS INT) AS Quantity,        -- Ép kiểu Quantity thành INT
               SUM(p.Price * o.Quantity) AS TotalPrice, 
               CAST(NULL AS DATETIME) AS OrderDate,  -- Ép kiểu OrderDate thành DATETIME
               CAST(NULL AS NVARCHAR(50)) AS Status,  -- Ép kiểu Status thành NVARCHAR
			   CAST(NULL AS NVARCHAR(50)) AS PaymentMode, -- Ép kiểu PaymentMode thành NVARCHAR
               CAST(NULL AS NVARCHAR(50)) AS CardNo       -- Ép kiểu CardNo thành NVARCHAR
        FROM Orders o  
        INNER JOIN Products p ON p.ProductId = o.ProductId  
        WHERE o.PaymentId = @PaymentId AND o.UserId = @UserId
	END  

	-- SELECT ORDER HISTORY  
	IF @Action = 'ODRHISTORY'  
	BEGIN  
		SELECT DISTINCT o.PaymentId, p.PaymentMode, p.CardNo  
		FROM Orders o  
		INNER JOIN Payment p ON p.PaymentId = o.PaymentId  
		WHERE o.UserId = @UserId  
	END  

	-- GET ORDER STATUS  
	IF @Action = 'GETSTATUS'  
	BEGIN  
		SELECT o.OrderDetailsId,  
			   o.OrderNo,  
			   (pr.Price * o.Quantity) AS TotalPrice,  
			   o.Status,  
			   o.OrderDate,  
			   p.PaymentMode,  
			   pr.Name FROM Orders o  
		INNER JOIN Payment p ON p.PaymentId = o.PaymentId  
		INNER JOIN Products pr ON pr.ProductId = o.ProductId  
	END  

	-- GET ORDER STATUS BY ID  
	IF @Action = 'STATUSBYID'  
	BEGIN  
		SELECT OrderDetailsId, Status FROM Orders  
		WHERE OrderDetailsId = @OrderDetailsId  
	END  

	-- UPDATE ORDER STATUS  
	IF @Action = 'UPDSTATUS'  
	BEGIN  
		UPDATE dbo.Orders  
		SET Status = @Status WHERE OrderDetailsId = @OrderDetailsId  
	END  

END
